(function (w, sym) {
    var inModule = !this   // document.readyState === 'loading' && !inModule && document.write('<pre aria-hidden="true" style="transform:scale(0);position:absolute">.</pre>')
    // ('<!--[if IE]><link rel="stylesheet" href="' + location.origin + '/ie.css><![endif]-->')
    return cssSetup(sessionStorage)
    function cssSetup(S) {
        'use strict'
        // var b = document.querySelector('script[src$="css_bad.js"]')
            var disambiguity = '/*stylesheet auto-generated by css.js*/'
            ,d=Object.defineProperty,script=document.currentScript;''.startsWith||d(String.prototype,'startsWith',{value:function(s,p){return this.slice(p=p|0,(s+='').length+p)===s}});[].find||d(Array.prototype,'find',{value:function(c,t,m,z){for(var i=0,l=(m=this).length;i<l;++i){z=m[i];if(c.call(t,z))return z}}})
                // b = b && b.remove()
        if (sym in w || typeof w[disambiguity] === 'object') return w[sym]
        let src
        w.reportError || (w.reportError = function reportError(t) {
            try {
                var e = new ErrorEvent('error', {
                    message: t.message,
                    error: t,
                    filename: (scr = src || inModule ? document.querySelector('script[src$="css.js"]') : script) && scr.src
                })
                w.dispatchEvent(e)
                e.defaultPrevented || console.error(t)
            }
            catch(e) {console.debug(e)}
        })
        function q(n){return'{'+n+'}'}
        function gn() {
            try {
                var o = top.name
                if (!o || o.includes(disambiguity)) return o // name is free to use
                throw''
            }
            catch (e) {
                e && reportError(e)
                sn = S.setItem.bind(S, disambiguity)
                gn = S.getItem.bind(S, disambiguity)
                return gn() || ''
            }
        }
        w.CSS || (w.CSS = function(){var s = document.createElement('style'), computed = getComputedStyle(s);gwn().appendChild(s);return{supports:supports};function supports(propOrSelector, value) {var isSelector = propOrSelector.slice(0, 8) === 'selector';if (isSelector && value == null) {s.textContent = propOrSelector.slice(9, -1) + '{width:auto;}';return (s.sheet.cssRules || s.sheet.rules).length === 1}return propOrSelector in computed}}())
        var Reflect = w.Reflect || {set:function(t,p,v){t[p]=v},get:function(t,p){return t[p]}}
        , sn = Reflect.set.bind(1,top,'name')
            , canWrite = !inModule&&document.readyState!=='complete'
            , get = document.getElementById.bind(document, disambiguity)
            , func = CSS.registerProperty || void (fallback = new Map), selector = '*,:where(::-moz-color-swatch,::-moz-focus-inner,::-moz-list-bullet,::-moz-list-number,::-moz-meter-bar,::-moz-progress-bar,::-moz-range-progress,::-moz-range-thumb,::-moz-range-track,::-webkit-inner-spin-button,::-webkit-meter-bar,::-webkit-meter-even-less-good-value,::-webkit-meter-inner-element,::-webkit-meter-optimum-value,::-webkit-meter-suboptimum-value,::-webkit-progress-bar,::-webkit-progress-inner-element,::-webkit-progress-value,::-webkit-scrollbar,::-webkit-search-cancel-button,::-webkit-search-results-button,::-webkit-slider-runnable-track,::-webkit-slider-thumb,::after,::backdrop,::before,::checkmark,::column,::cue,::details-content,::file-selector-button,::first-letter,::first-line,::grammar-error,::marker,::picker-icon,::placeholder,::scroll-marker,::scroll-marker-group,::selection,::spelling-error,::target-text,::view-transition)'
           , ce = document.createElement.bind(document),
            name = gn(),
            fro=Object.fromEntries||function(l,o){o={};l.forEach(function(e,p){p=e[0];o[p]=e[1]});return o},entries=Object.entries||function(o,i){var x=[];for(i in o)x.push([i,o[i]]);return x},
            is = Array.isArray,
            scr,
            sheet = getDefaultStyleSheet(),
            descr = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent'),
            stc = descr.set.bind(sheet),
            gtc = descr.get.bind(sheet),
            props = new Set,
            has = props.has.bind(props),
            add = props.add.bind(props),
            alr = new Set,
            ah = alr.has.bind(alr),
            addAlr = alr.add.bind(alr),
            vendr = /^(?:-(?:webkit|moz(?:-osx)?|apple|khtml|konq|r?o|ms|xv|atsc|wap|ah|hp|rim|tc|fso|icab|epub)|prince|mso)-(?!$)/,
            dr = new Map,
            dget = dr.get.bind(dr),
            dhas = dr.has.bind(dr),
            dset = dr.set.bind(dr)
            try {var pseudoClass=RegExp('(?<=:)(?<!::)[\\w-]+','g'),pseudoElement=RegExp('(?<=::)[\\w-]+','g')}
            // Lookbehind is more modern
            catch(e){}
            var sup = CSS.supports,
            dash = /-./g,
            azregex = /[A-Z]/g,
            Rm,
            br = ['epub', 'icab', 'fso', 'tc', 'rim', 'hp', 'ah', 'wap', 'atsc', 'xv', 'ms', 'o', 'ro', 'konq', 'khtml', 'apple','moz', 'moz-osx', 'webkit']
            , formatClass = formatGeneric.bind(1,':',pseudoClass),
            formatElement = formatGeneric.bind(1,'::',pseudoElement)
            CSS.registerProperty||(canWrite&&(w.fallback=fallback,w.vendor=vendor,document.write('<','script src="no_register_property.js" async','>','<','/script','>')))
        /*if (canWrite) {
            var date = Date.now()
            // Idk why, but it seems to make the page render faster 
            document.write('<p style="transform:scale(0);display:table-cell;z-index:-9999;" id="' + date +'">.</p>')
            var p = document.getElementById(date)
            p && (p = date = addEventListener('load', p.remove.bind(p), {once:true}))
        }*/ 
        function dashVendor(prop, val) {
            return vendor(toDash(prop), val)
        }
        function capVendor(prop, val) {return toCaps(vendor(toDash(prop), val))}
        function badCSS(data) {
            if (ah(data)||arguments[1]) return
            console.warn(data)
            addAlr(data)
        }
        function vendorSelector(selector, type) {
            type = String(type) || ':'
            var og = selector = selector.replace(vendr, '')
            , i = br.length,
            temp,
            s
            while((s = !supportsRule(temp = type + selector)) && i--) 
                selector = '-'+br[i]+'-' + og
            return s ? arguments[0] : selector
        }
        function formatGeneric(d, pseudo, selector) {
            var replace = ''.replace.bind(selector)
            , matches = selector.match(pseudo)
            if (matches) for(var i = 0, l = matches.length; i < l; ++i) {
                    var match = matches[i]
                    selector = replace(match, vendorSelector(match, d))
            }
            return selector
        }
        function formatSelector(s) {
            return formatClass(formatElement(s))
        }
        function vendor(p, v) {
            if (p.startsWith('--'))
                return p
            if (v.trim() && !sup(p, v)) {
                var a = p = p
                    .replace(vendr, '')
                return dhas(p) ? dget(p) : (
                    sup(a, v) ||
                    // Maybe you don't need a prefix?
                    sup(a = '-webkit-' + p, v) ||
                    // Most likely (Chrome, Safari)
                    sup(a = '-moz-' + p, v) ||
                    // Firefox
                    sup(a = '-moz-osx-' + p, v) ||
                    // Firefox
                    sup(a = '-apple-' + p, v) ||
                    // Apple
                    sup(a = '-o-' + p, v) ||
                    // Opera
                    sup(a = '-ms-' + p, v) ||
                    // Microsoft
                    sup(a = '-khtml-' + p, v) ||
                    // Konqueror
                    sup(a = '-konq-' + p, v) ||
                    // Konqueror
                    sup(a = 'mso-' + p, v) ||
                    // Microsoft Office
                    sup(a = '-xv-' + p, v) ||
                    // Opera
                    sup(a = '-atsc-' + p, v) ||
                    // Advanced Television Standards Committee
                    sup(a = '-wap-' + p, v) ||
                    // The WAP Forum
                    sup(a = 'prince-' + p, v) ||
                    // YesLogic
                    sup(a = '-ah-' + p, v) ||
                    // Antenna House
                    sup(a = '-hp-' + p, v) ||
                    // Hewlett Packard
                    sup(a = '-ro-' + p, v) ||
                    // Real Objects
                    sup(a = '-rim-' + p, v) ||
                    // Research In Motion
                    sup(a = '-tc-' + p, v) ||
                    // Tall Components
                    sup(a = '-fso-' + p, v) ||
                    // IDK
                    sup(a = '-icab-' + p, v) ||
                    // IDK
                    sup(a = '-epub-' + p, v) ||
                    // IDK
                    // sup(prefix = `-internal-${prop}`, val) ||
                    badCSS("Unrecognized CSS at '" + (a = p) + ": " + v + "'", arguments[2]),
                    dset(p, a),
                    // Sorry!
                    a)
            }
            return p
        }
        function importFont(name, src) {
            if (name && src) {
                var font = new FontFace(name, "url("+src+")")
                font.load().then(document.fonts.add, console.warn)
                return font
            }
            throw Error('Source and name required')
        }
        function toCaps(prop) {
            return prop.includes('-') && !prop.startsWith('--') ? (prop[0] === '-' ? prop.slice(1) : prop).replace(dash, tuc) : prop
        }
        function toDash(prop) {
            return prop.startsWith('--') ? prop :
                prop.replace(azregex, tlc)
        }
        function tlc(o) {
            return'-'+o.toLowerCase()
        }
        function tuc(c) {
            return c[1].toUpperCase()
        }
        /**
         * @param {Object} o key/value pairs that match CSS
         * @returns {String}
         */
        function toCSS(o) {
            var str = '',v,p,silent = arguments[1]
            is(o) && (o = fro(o))
            for (p in o) {
                v = String(o[p])
                p === 'content'  && !sup('content', v) && (v='"'+v+'"')
                // try {
                    str += vendor(toDash(p),v,silent)+':'+v+';'
                // } catch (e) {
                    // reportError(e)
                // }
            }
            return str
        }
        /**
         *  #### Should only be used for dynamic/default CSS
         * @param {String} selector A valid CSS selector (something like . or#)
         * @param {Object} rule An object which describes the selector
         */
        function registerCSS(selector, rule) {
            var str = '',silent = arguments[2]
            selector = selector.split(',')
            var i = selector.length
                while(i--) str = formatSelector(selector[i]) + str
            stc(gtc()+str+q(toCSS(rule,silent)))
            return sheet
        }
        function registerCSSRaw(rules) {
            stc(gtc() + rules)
            return sheet
        }
        function importCSS(url) {
            var n = ce('link'),
                s = n.setAttribute.bind(n)
            s('rel', 'stylesheet')
            s('fetchpriority', 'high')
            s('href', url)
            addElement(n)
            return n
        }
        function getDefaultStyleSheet() {
            return (get() || function () {
                var str = name || "@namespace svg url('http://www.w3.org/2000/svg');@media(prefers-reduced-transparency:reduce){*{opacity:1 !important;}}:root{--system-font:system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen,Ubuntu,Cantarell,'Open Sans','Helvetica Neue',sans-serif}@supports not(content-visibility:auto){*{visibility:var(--content-visibility)}}@supports not(scrollbar-color:auto){::-webkit-scrollbar{width:var(--scrollbar-width);background-color:var(--scrollbar-color)}::-webkit-scrollbar-thumb{background-color:var(--scrollbar-thumb-color)}}" + disambiguity
                /*if (canWrite) {
                    // this branch is slower
                    return document.write('<style id="'+disambiguity+'" blocking="render">'+str+'</style>'), get()
                }*/
                , out = ce('style'),
                l = out.setAttribute.bind(out)
                l('id', disambiguity)
                l('blocking', out.blocking = 'render')
                out.textContent = str
                addElement(out)
                return out
            }())
        }
        function gwn() {
            return document.head || document.body || document.documentElement || document.getElementsByTagName('*')[0] || document
        }
        function addElement(el) {
            gwn().appendChild(el)
        }
        function registerCSSAll(rules) {
            Object.keys(rules).forEach(reg, rules)
        }
        function reg(r) {
            var t = this[r]
            // try {
                registerCSS(r, t)
            // } catch (e) {
               // reportError(e)
            // }
        }
        function supportsRule(rule) {
            return sup("selector("+rule+')')
        }
        function g(name, initialValue, inherits, syntax) {
            add(name)
            var o = '--'+name,
            n = o,
                key = vendor(name, o = 'var('+o+')', true)
            uv[key] = o
            // try { 
                func ? func( { name: n, initialValue: initialValue, inherits: inherits == null ? false : !!(initialValue == null ? 'auto' : initialValue), syntax: syntax == null ? '*' : syntax }) 
                : fallback.set(key, vendor(key, 'inherit'))
                return g
            // }
            // catch (e) {e.name === 'InvalidModificationError' || (console.log(o), reportError(e),func || fallback.set(key, vendor(key, 'inherit')))}
        }
        function W(selector) {
            return':where('+selector+')'
        }
        sup('selector(:where(p))') || (W=function(o){return o})
        var fallback, 
        uv = {'box-sizing':'border-box','overflow-wrap': 'var(--word-wrap)','scrollbar-color': 'var(--scrollbar-thumb-color) var(--scrollbar-color)'}
        // , all = [
            g("user-select", "auto", true) // Most important one
            ("user-modify", "auto", false)
            ("zoom", "auto", false)
            ('locale', 'auto', true)
            ('line-grid', 'auto', true)
            ('line-snap', 'auto', true)
            ('nbsp-mode', 'auto', true)
            ("text-zoom", 'auto', true)
            ('line-align', 'auto', true)
            ('user-drag', "auto", true)
            ('text-decorations-in-effect', 'auto', false)
            ("force-broken-image-icon", 0, false, "<integer>")
            ("float-edge", "content-box", false)
            ("image-region", "auto", true)
            ("box-orient", "inline-axis", false)
            ("box-align", "stretch", false)
            ("box-direction", "normal", false)
            ("box-flex", 0, false)
            ("box-flex-group", 0, false)
            ("box-lines", "single", false)
            ("box-ordinal-group", "1", false)
            ("box-decoration-break", "slice", false)
            ("box-pack", "start", false)
            ("user-input", "auto", true)
            ("box-reflect", "none", false) // Kewl
            ("text-stroke-color", "currentcolor", true, "<color>")
            ("text-stroke-width", 0, false, "<length>")
            ("text-security", "none", false)
            ("text-fill-color", "currentcolor", true)
            ("line-clamp", "none", false)
            ("font-smoothing", "auto", true)
            ("mask-position-x", "0%", false, "<length-percentage>")
            ("mask-position-y", "0%", false, "<length-percentage>")
            ("tap-highlight-color", "rgb(0, 0, 0, 0.18)", true, "<color>")
            ("touch-callout", "auto", true)
            ("window-dragging", "auto", false)
            ("stack-sizing", "stretch-to-fit", true)
            ("mask-composite", "source-over", false)
            ("image-rect", "auto", true)
            ("context-properties", "none", true)
            ("outline-radius", "0 0 0 0", false)
            ("window-shadow", "auto", false)
            ("binding", "none", false)
            ("user-focus", "none", false)
            ("text-blink", "none", false)
            ("content-zoom-limit", "400% 100%", false)
            ("accelerator", 0, false)
            ("initial-letter", "normal", false)
            ("text-kashida-space", "0%", true, "<percentage>")
            ("interpolation-mode", "none", false)
            ("progress-appearance", "bar", false)
            ("content-zooming", "auto", false)
            ("flow-from", "none", false)
            ("flow-into", "none", false)
            ("content-zoom-chaining", "none", false)
            ("high-contrast-adjust", "auto", true)
            ("ime-mode", "auto", false)
            ("overflow-style", "auto", true)
            ("touch-select", "grippers", true)
            ("behaviour", "url()", false, "<url>")
            ("interactivity", "auto", true)
            ("input-security", "auto", false)
            ("caret-animation", "auto", true)
            ("wrap-through", "wrap", false)
            ("print-color-adjust", "economy", true)
            ("cursor-visibility", "auto", true)
            ("pay-button-style", "white", false)
            ("color-filter", "none", true)
            ("pay-button-type", "plain", false)
            ("visual-effect", "none", true)
            ("text-spacing-trim", "normal", true)
            ("text-group-align", "none", false)
            ("text-autospace", "normal", true)
            ("orient", 'inline', false)
            ("ruby-overhang", "auto", true)
            ("max-lines", "none", false)
            ("line-fit-edge", "leading", true)
            ("continue", "auto", false)
            ("dashboard-region", "none", false)
            ("overflow-scrolling", "auto", false)
            ("column-axis", "auto", false)
            ('column-progression', 'auto', false)
            ('content-visibility', 'visible',false)
            // ^ This is a special case just to support older browsers without 'ContentVisibilityAutoStateChangeEvent'
            ('text-size-adjust', 'auto', true)
            ('border-vertical-spacing', 'auto', false)
            ('max-logical-height', 'none', false)
            ('min-logical-height', 'none', false)
            ('max-logical-width', 'none', false)
            ('min-logical-width', 'none', false)
            ('buffered-rendering', 'auto', false)
            ('color-rendering', 'auto', false)
            ('word-wrap', 'normal', false)
        // ],
            var dflt = name || entries(function(){
                var align = sup.bind(1, 'text-align')
                , o = {
                    ':root': {
                        'interpolate-size': 'allow-keywords',
                        '--crisp-edges': '-webkit-optimize-contrast -moz-crisp-edges'.split(' ').find(sup.bind(1,'image-rendering')),
                        '--stretch': '-moz-available -webkit-fill-available stretch'.split(' ').find(sup.bind(1, 'max-width')),
                        '--center': '-moz-center -webkit-center -khtml-center'.split(' ').find(align),
                        // this is different from just 'center' and idk why!!!
                        '--match-parent': 'match-parent -moz-match-parent -webkit-match-parent'.split(' ').find(align)
                    }
                }
                o[W("button,a,input[type=button],input[type=checkbox],input[type=radio],input[type=submit],input[type=image],input[type=reset],input[type=file]")] = { cursor: 'pointer' }
                o[W('[aria-busy=true]')] = { cursor: 'progress' }
                o[W('[draggable=false]')] = { '--user-drag': 'none' }
                o[W('[draggable=true]')] = { '--user-drag': 'element' }
                o[W('[contenteditable],[contenteditable=true]')] = { '--user-modify': 'read-write' }
                o[W('[contenteditable=false]')] = { '--user-modify': 'read-only', '--user-input': 'none' }
                o[W('[contenteditable="plaintext-only"]')] = { '--user-modify': 'read-write-plaintext-only' }
                o[W('[inert]')] = { '--interactivity': 'inert' }
                o[W('img')] = { '--force-broken-image-icon': 1 }
                o[W('input[type=range]')] = { cursor: 'grab' }
                o[W('input[type=range]:active')] = { cursor: 'grabbing' }
                o[W(':disabled,[aria-disabled=true]')] = { cursor: 'not-allowed' }
                o[W('.centerx,.center')] = { 'justify-self': 'center', margin: 'auto', 'text-align': 'center' }
                o[W('.centery,.center')] = { 'align-self': 'center', inset: 0, position: 'fixed' }
                return o
            }()).map(function(a){return a[0]+q(toCSS(a[1]))})
            , first = gtc(),str
        try {
            func({ name: '--scrollbar-thumb-color', initialValue: 'auto', inherits: true })
            func({ name: '--scrollbar-color', initialValue: 'auto', inherits: true })
        }
        catch(e){reportError(e)}
        stc(name || (sn(str=first+selector+q(toCSS(uv,true))+dflt.join('')),str))
        var css = constructor.prototype[sym] = Object.freeze({
            getDefaultStyleSheet: getDefaultStyleSheet,
            registerCSSRaw: registerCSSRaw,
            get reducedMotion(){
                return Rm||(Rm=matchMedia('(prefers-reduced-motion:reduce)'))
            },
            registerCSSAll: registerCSSAll,
            supportedPClassVendor: formatClass,
            supportsRule: supportsRule,
            registerCSS: registerCSS,
            dashVendor: dashVendor,
            importFont: importFont,
            capVendor: capVendor,
            importCSS: importCSS,
            badCSS: badCSS,
            toCaps: toCaps,
            toDash: toDash,
            vendor: vendor,
            toCSS: toCSS,
            has: has,
            formatSelector:formatSelector
        })
        return css 
    }
}.call(null,window,typeof Symbol==='function'?Symbol.for('CSS'):'[[CSSModule]]'))